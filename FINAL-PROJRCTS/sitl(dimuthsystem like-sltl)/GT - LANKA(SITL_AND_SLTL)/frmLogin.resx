<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAAnAMcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        3vH3jzR/hf4H1TxF4h1G10nQ9FtZLy9u7htsVtCilmdj6Adup6DJrwjw9d/GT9qvT/7Y0/VG+C/gu6Jf
        S0l0yO98TahDn5LiVZsw2gdcMImSSRQQHCnKi9+0TZf8Lr/aW+Hfw0uN0ugWEUvjXxBbceXfLayIllDI
        DndH9qYSlSMEwIc8V8CftEftX/tRfDj9pH9ozw/Z/F61g0v4U2Fx4ks7aDQrCTy7K6uEext0Z7QszwwX
        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
</value>
  </data>
</root>